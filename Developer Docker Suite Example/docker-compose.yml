version: "3.8"
services:
  idp.db:
    image: mysql:8.0.19
    container_name: idp-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root # Default password
      MYSQL_DATABASE: H2020.IPMDecisions.IDP
    volumes:
      - idp_msql:/var/lib/mysql
      - ./IDP/MySQL_Init_Script/1.init.sql:/docker-entrypoint-initdb.d/1.init.sql
      - ./IDP/MySQL_Init_Script/2.defaultData.sql:/docker-entrypoint-initdb.d/2.defaultData.sql # If this script is not running during volumne creationg, please run it manually
    restart: always
  idp.api:
    image: ipmdecisions/identityproviderservice:latest
    container_name: idp-api
    hostname: idp.api
    restart: always
    ports:
      - "80"
      - "443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:MySqlDbConnection=Server=idp.db;Database=H2020.IPMDecisions.IDP;Uid={YourUser};Pwd={YorPassword}; #This username/password and database are created when volumnes are generated. Need to match information from idp.db> 1.init.sql 
      - JwtSettings:TokenLifetimeMinutes=80
      - JwtSettings:SecretKey={ThisKeyIsSharedWithAllMicroservices}
      - JwtSettings:IssuerServerUrl={ThisIssuerIsSharedWithAllMicroservices}
      - JwtSettings:ValidAudiences={ThisAudiendeIsSharedWithAllMicroservices}
      - AllowedHosts=*
      - MicroserviceInternalCommunication:ApiGatewayAddress=http://apg.api/
      - MicroserviceInternalCommunication:EmailMicroservice=api/eml/
      - MicroserviceInternalCommunication:UserProvisionMicroservice=api/upr/
      - MicroserviceInternalCommunication:IdentityProviderMicroservice=api/idp/
      - MicroserviceInternalCommunication:ContentTypeHeader={CustomHeaderTypeForInternalCommuncation}
      - MicroserviceInternalCommunication:SecurityTokenCustomHeader={CustomHeaderForInternalCommuncation}
      - MicroserviceInternalCommunication:SecurityToken={CustomTohenForInternalCommuncation}
      - NLog:targets:logfile:fileName=./logs/ipm-decisions-IDP-$${shortdate}.log
      - NLog:rules:logfile:minLevel=Warn
      - NLog:rules:logconsole:minLevel=Warn
      - UIPageAddresses:ResetPasswordFormPageAddress={yourDeploymentURL}/resetpassword
      - UIPageAddresses:ConfirmUserFormPageAddress={yourDeploymentURL}/confirmemail
      - EmailConfirmationAllowanceHours=24
      - InactiveUsers:FirstEmailMonthInactive=6
      - InactiveUsers:SecondEmailMonthInactive=10
      - InactiveUsers:LastEmailMonthInactive=11
      - InactiveUsers:DeleteAccountMonthInactive=12
      - AccessClaims:ClaimTypeName=useraccesstype
      - AccessClaims:UserAccessLevels=farmer;advisor;researcher;developer
      - Reports:ReportReceiversEmails:test@test.com;test1@test.com
  upr.db:
    image: postgis/postgis:12-2.5-alpine
    container_name: upr-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: H2020.IPMDecisions.UPR
    restart: always
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - upr_postgres_volume:/var/lib/postgresql/data
      - ./UPR/Postgresql_Init_Script/1.createUser.sql:/docker-entrypoint-initdb.d/1.createUser.sql
      - ./UPR/Postgresql_Init_Script/2.dbBackup.sql:/docker-entrypoint-initdb.d/2.dbBackup.sql
      - ./UPR/Postgresql_Init_Script/3.defaultData.sql:/docker-entrypoint-initdb.d/3.defaultData.sql
  upr.api:
    image: ipmdecisions/userprovisionservice:1.24.6
    container_name: upr-api
    hostname: upr.api
    restart: always
    ports:
      - "80"
      - "443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:MyPostgreSQLConnection=Host=upr.db;Port=5432;Database=H2020.IPMDecisions.UPR;Username={YourUser};Password={YourPassword}; #This username/password and database are created when volumnes are generated. Need to match information from upr.db> 1.createUser.sql
      - JwtSettings:SecretKey={ThisKeyIsSharedWithAllMicroservices}
      - JwtSettings:IssuerServerUrl={ThisIssuerIsSharedWithAllMicroservices}
      - JwtSettings:ValidAudiences={ThisAudiendeIsSharedWithAllMicroservices}
      - AccessClaims:ClaimTypeName=useraccesstype
      - AccessClaims:UserAccessLevels=farmer;advisor;researcher;developer
      - MicroserviceInternalCommunication:ApiGatewayAddress=http://apg.api/
      - MicroserviceInternalCommunication:IdentityProviderMicroservice=api/idp/
      - MicroserviceInternalCommunication:EmailMicroservice=api/eml/
      - MicroserviceInternalCommunication:UserProvisionMicroservice=api/upr/
      - MicroserviceInternalCommunication:DssMicroservice=api/dss/
      - MicroserviceInternalCommunication:WeatherMicroservice=api/wx/
      - MicroserviceInternalCommunication:DssApiUrl={yourDeploymentURL}/api/dss
      - MicroserviceInternalCommunication:ContentTypeHeader={CustomHeaderTypeForInternalCommuncation}
      - MicroserviceInternalCommunication:SecurityTokenCustomHeader={CustomHeaderForInternalCommuncation}
      - MicroserviceInternalCommunication:SecurityToken={CustomTohenForInternalCommuncation}
      - NLog:targets:logfile:fileName=./logs/ipm-decisions-UPR-$${shortdate}.log
      - NLog:rules:logfile:minLevel=Warn
      - NLog:rules:logconsole:minLevel=Warn
      - AppConfiguration:MaxDaysAllowedForDssOutputData=365
      - AppConfiguration:DisplayInternalParameters=true
      - AppConfiguration:DisplayOutOfSeasonDss=true
      - AppConfiguration:DisplayNotValidatedDss=true
      - AppConfiguration:AutoUpdateToNextSeason=false
      - AppConfiguration:HourToRunNightSchedule=3
      - AppConfiguration:MaxReScheduleAttemptsDss=3
      - AppConfiguration:HoursToRunDssWithErrorsSchedule=7,14,21
      - AppConfiguration:NewtonsoftLicence=
      - AppConfiguration:SecondsGapDssNightSchedule=20
      - AppConfiguration:DefaultWeatherService=com.open-meteo
  eml.api:
    image: ipmdecisions/emailservice:latest
    container_name: eml-api
    hostname: eml.api
    restart: always
    ports:
      - "80"
      - "443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JwtSettings:SecretKey={ThisKeyIsSharedWithAllMicroservices}
      - JwtSettings:IssuerServerUrl={ThisIssuerIsSharedWithAllMicroservices}
      - JwtSettings:ValidAudiences={ThisAudiendeIsSharedWithAllMicroservices}
      - MicroserviceInternalCommunication:ContentTypeHeader={CustomHeaderTypeForInternalCommuncation}
      - MicroserviceInternalCommunication:SecurityTokenCustomHeader={CustomHeaderForInternalCommuncation}
      - MicroserviceInternalCommunication:SecurityToken={CustomTohenForInternalCommuncation}
      - MicroserviceInternalCommunication:EmailMicroservice=api/eml/
      - EmailSettings:SmtpServer={YourSMTPInformation}
      - EmailSettings:SmtpPort=25
      - EmailSettings:UseSmtpLoginCredentials={SetTrueIfYouNeedToUseLoginDetails}
      - EmailSettings:SmtpUsername={YourSMTPInformation}
      - EmailSettings:SmtpPassword={YourSMTPInformation}
      - EmailSettings:FromAddress={YourSMTPInformation}
      - EmailSettings:FromName={YourSMTPInformation}
      - EmailSettings:EnableSsl={YourSMTPInformation}
      - MailingListSetting:IPMDecisionsListId={SendGridMailingList}
      - MailingListSetting:LoginToken={SendGridMailingList}
      - NLog:targets:000:fileName=./logs/ipm-decisions-EML-$${shortdate}.log
      - NLog:targets:000:type=File
      - NLog:rules:000:minLevel=Warn
      - NLog:rules:001:minLevel=Error
  cms:
    image: agentejo/cockpit
    hostname: cms
    container_name: ipm-cms
    restart: always
    ports:
      - "5001:80"
    volumes:
      - ./CMS/storage:/var/www/html/storage
      - ./CMS/config:/var/www/html/config
    environment:
      APP_NAME: H2020.IPMDecisions.CMS
      COCKPIT_SESSION_NAME: cockpit
  dss.api:
    image: ipmdecisions/dss_api:2024-05-02
    hostname: dss.api
    container_name: dss-api
    restart: always
    ports:
      - "8080"
    environment:
      - EPPO_AUTHTOKEN={EPPO_Codes_DatabaseToken - https://www.eppo.int/RESOURCES/eppo_databases/eppo_codes}
      - IPMDSS_ADMIN_TOKEN_MD5={EPPO_Codes_DatabaseToken}
  wx.api:
    image: ipmdecisions/weather_api:2024-05-06
    hostname: wx.api
    container_name: wx-api
    restart: always
    ports:
      - "8080"
    environment:
      - WEATHER_API_URL={URLOftheWXMicroservices}
      - BEARER_TOKEN_fr_meteo-concept_api={Meto_Fr_Auth_Token}
  apg.api:
    image: ipmdecisions/apigateway:1.0.0 #it was 'latest'
    links:
      - idp.api
      - upr.api
      - cms
      - eml.api
      - dss.api
      - wx.api
    container_name: apg-api
    restart: always
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - JwtSettings:SecretKey={ThisKeyIsSharedWithAllMicroservices}
      - JwtSettings:IssuerServerUrl={ThisIssuerIsSharedWithAllMicroservices}
      - JwtSettings:ValidAudiences={ThisAudiendeIsSharedWithAllMicroservices}
      - AllowedHosts=*
      - AccessClaims:ClaimTypeName="useraccesstype"
      - AccessClaims:UserAccessLevels=farmer;advisor;researcher;developer
    volumes:
      - ./APG/Configuration:/app/Configuration
  web:
    container_name: ipm-ui
    restart: always
    image: ipmdecisions/ipm-decisions-platform:1.11.0_dev
    ports:
      - "4999:80"
      - "444:443"
volumes:
  idp_msql:
  upr_postgres_volume:
